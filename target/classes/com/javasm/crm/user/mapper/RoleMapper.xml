<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javasm.crm.user.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.javasm.crm.user.entity.Role">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="role_description" jdbcType="VARCHAR" property="roleDescription"/>
        <result column="role_status" jdbcType="INTEGER" property="roleStatus"/>
        <result column="role_encoding" jdbcType="VARCHAR" property="roleEncoding"/>
        <result column="role_permission_description" jdbcType="VARCHAR" property="rolePermissionDescription"/>
        <result column="dept_id" jdbcType="INTEGER" property="deptId"/>

        <association property="department" javaType="com.javasm.crm.user.entity.Department">
            <id column="dept_id" property="deptId" jdbcType="INTEGER"/>
            <result column="dept_name" property="deptName" jdbcType="VARCHAR"/>
        </association>

        <association  property="permission" javaType="com.javasm.crm.permission.entity.Permission">
            <id column="permission_id" jdbcType="INTEGER" property="permissionId"/>
            <result column="permission_name" property="permissionName" jdbcType="VARCHAR"/>
            <result column="permission_status" property="permissionStatus" jdbcType="INTEGER"/>
            <result column="permission_description" property="permissionDescription" jdbcType="VARCHAR"/>
        </association>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        role_id, role_name, role_description, role_status, role_encoding, role_permission_description,
        dept_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        SELECT
        <include refid="Base_Column_List"/>
        FROM role
        WHERE role_id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        DELETE FROM role
        WHERE role_id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="role_id" keyProperty="roleId" parameterType="com.javasm.crm.user.entity.Role"
            useGeneratedKeys="true">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        INSERT INTO role (role_name, role_description,
        role_status, role_encoding, role_permission_description,
        dept_id)
        VALUES (#{roleName,jdbcType=VARCHAR}, #{roleDescription,jdbcType=VARCHAR},
        #{roleStatus,jdbcType=INTEGER}, #{roleEncoding,jdbcType=VARCHAR}, #{rolePermissionDescription,jdbcType=VARCHAR},
        #{deptId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="role_id" keyProperty="roleId" parameterType="com.javasm.crm.user.entity.Role"
            useGeneratedKeys="true">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        INSERT INTO role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleDescription != null">
                role_description,
            </if>
            <if test="roleStatus != null">
                role_status,
            </if>
            <if test="roleEncoding != null">
                role_encoding,
            </if>
            <if test="rolePermissionDescription != null">
                role_permission_description,
            </if>
            <if test="deptId != null">
                dept_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDescription != null">
                #{roleDescription,jdbcType=VARCHAR},
            </if>
            <if test="roleStatus != null">
                #{roleStatus,jdbcType=INTEGER},
            </if>
            <if test="roleEncoding != null">
                #{roleEncoding,jdbcType=VARCHAR},
            </if>
            <if test="rolePermissionDescription != null">
                #{rolePermissionDescription,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null">
                #{deptId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.javasm.crm.user.entity.Role">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        UPDATE role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDescription != null">
                role_description = #{roleDescription,jdbcType=VARCHAR},
            </if>
            <if test="roleStatus != null">
                role_status = #{roleStatus,jdbcType=INTEGER},
            </if>
            <if test="roleEncoding != null">
                role_encoding = #{roleEncoding,jdbcType=VARCHAR},
            </if>
            <if test="rolePermissionDescription != null">
                role_permission_description = #{rolePermissionDescription,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=INTEGER},
            </if>
        </set>
        WHERE role_id = #{roleId ,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.javasm.crm.user.entity.Role">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        UPDATE role
        SET role_name = #{roleName,jdbcType=VARCHAR},
        role_description = #{roleDescription,jdbcType=VARCHAR},
        role_status = #{roleStatus,jdbcType=INTEGER},
        role_encoding = #{roleEncoding,jdbcType=VARCHAR},
        role_permission_description = #{rolePermissionDescription,jdbcType=VARCHAR},
        dept_id = #{deptId,jdbcType=INTEGER}
        WHERE role_id = #{id,jdbcType=INTEGER}
    </update>
    <insert id="batchInsert" keyColumn="role_id" keyProperty="roleId" parameterType="map" useGeneratedKeys="true">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        INSERT INTO role
        (role_name, role_description, role_status, role_encoding, role_permission_description,
        dept_id)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.roleName,jdbcType=VARCHAR},
            #{item.roleDescription,jdbcType=VARCHAR},
            #{item.roleStatus,jdbcType=INTEGER}, #{item.roleEncoding,jdbcType=VARCHAR},
            #{item.rolePermissionDescription,jdbcType=VARCHAR},
            #{item.deptId,jdbcType=INTEGER})
        </foreach>
    </insert>
    <delete id="batchDeleteRoles" parameterType="list">
        DELETE FROM role WHERE role_id IN
        <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </delete>
    <select id="selectAllRole" resultMap="BaseResultMap">
        SELECT
        role.role_id,
        role.role_name,
        role.role_description,
        role.role_status,
        role.role_encoding,
        department.dept_name,
        permission.permission_name,
        permission.permission_id,
        permission.permission_description,
        permission.permission_status,
        department.dept_id
        FROM
        role
        INNER JOIN role_department ON role_department.role_id = role.role_id
        INNER JOIN department ON role_department.dept_id = department.dept_id
        INNER JOIN role_permission ON role_permission.role_id = role.role_id
        INNER JOIN permission ON role_permission.permission_id = permission.permission_id
        <where>
            <if test="roleId != null and roleId!=''">
                role.role_id = #{roleId,jdbcType=INTEGER}
            </if>
            <if test="roleEncoding != null">
                AND role.role_encoding = #{roleEncoding,jdbcType=VARCHAR}
            </if>
            <if test="rolePermissionDescription != null">
                AND role.role_permission_description = #{rolePermissionDescription,jdbcType=VARCHAR}
            </if>
            <if test="deptId != null">
               AND role.role_id IN (SELECT role_department.role_id FROM role_department WHERE role.dept_id=#{deptId,jdbcType=INTEGER})
            </if>
            <if test="roleStatus !=null and roleStatus !=''">
                AND role.role_status=#{roleStatus,jdbcType=INTEGER}
            </if>
            <if test="roleName !=null and roleName!=''">
                AND role.role_name LIKE concat('%',#{roleName,jdbcType=VARCHAR},'%')
            </if>
            <if test="roleDescription !=null and roleDescription !=''">
                AND role.role_description LIKE concat('%',#{roleDescription,jdbcType=VARCHAR},'%')
            </if>
        </where>
        ORDER BY
        role.role_id ASC
    </select>
</mapper>
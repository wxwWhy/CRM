<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javasm.crm.user.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.javasm.crm.user.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="uname" jdbcType="VARCHAR" property="uname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="user_status" jdbcType="TINYINT" property="userStatus" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="position_id" jdbcType="INTEGER" property="positionId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="ip_address" jdbcType="VARCHAR" property="ipAddress" />
    <result column="creatime" jdbcType="VARCHAR" property="creatime" />
    <result column="creat_name" jdbcType="VARCHAR" property="creatName" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    `uid`, uname, `password`, age, user_status, login_name, dept_id, position_id, role_id, 
    phone, email, ip_address, creatime, creat_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user
    where `uid` = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    where `uid` = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="uid" keyProperty="uid" parameterType="com.javasm.crm.user.entity.User" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user (uname, `password`, age, 
      user_status, login_name, dept_id, 
      position_id, role_id, phone, 
      email, ip_address, creatime, 
      creat_name)
    values (#{uname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{userStatus,jdbcType=TINYINT}, #{loginName,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER}, 
      #{positionId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{ipAddress,jdbcType=VARCHAR}, #{creatime,jdbcType=VARCHAR}, 
      #{creatName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="uid" keyProperty="uid" parameterType="com.javasm.crm.user.entity.User" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uname != null">
        uname,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="positionId != null">
        position_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="ipAddress != null">
        ip_address,
      </if>
      <if test="creatime != null">
        creatime,
      </if>
      <if test="creatName != null">
        creat_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uname != null">
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=TINYINT},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        #{positionId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null">
        #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="creatime != null">
        #{creatime,jdbcType=VARCHAR},
      </if>
      <if test="creatName != null">
        #{creatName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.javasm.crm.user.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    <set>
      <if test="uname != null">
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=TINYINT},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null">
        ip_address = #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="creatime != null">
        creatime = #{creatime,jdbcType=VARCHAR},
      </if>
      <if test="creatName != null">
        creat_name = #{creatName,jdbcType=VARCHAR},
      </if>
    </set>
    where `uid` = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.javasm.crm.user.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set uname = #{uname,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      user_status = #{userStatus,jdbcType=TINYINT},
      login_name = #{loginName,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=INTEGER},
      position_id = #{positionId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      ip_address = #{ipAddress,jdbcType=VARCHAR},
      creatime = #{creatime,jdbcType=VARCHAR},
      creat_name = #{creatName,jdbcType=VARCHAR}
    where `uid` = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="uname = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `uid` = #{item.uid,jdbcType=INTEGER} then #{item.uname,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`password` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `uid` = #{item.uid,jdbcType=INTEGER} then #{item.password,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="age = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `uid` = #{item.uid,jdbcType=INTEGER} then #{item.age,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="user_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `uid` = #{item.uid,jdbcType=INTEGER} then #{item.userStatus,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="login_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `uid` = #{item.uid,jdbcType=INTEGER} then #{item.loginName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="dept_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `uid` = #{item.uid,jdbcType=INTEGER} then #{item.deptId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="position_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `uid` = #{item.uid,jdbcType=INTEGER} then #{item.positionId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="role_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `uid` = #{item.uid,jdbcType=INTEGER} then #{item.roleId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="phone = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `uid` = #{item.uid,jdbcType=INTEGER} then #{item.phone,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="email = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `uid` = #{item.uid,jdbcType=INTEGER} then #{item.email,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="ip_address = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `uid` = #{item.uid,jdbcType=INTEGER} then #{item.ipAddress,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="creatime = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `uid` = #{item.uid,jdbcType=INTEGER} then #{item.creatime,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="creat_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `uid` = #{item.uid,jdbcType=INTEGER} then #{item.creatName,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where `uid` in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.uid,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="uid" keyProperty="uid" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user
    (uname, `password`, age, user_status, login_name, dept_id, position_id, role_id, 
      phone, email, ip_address, creatime, creat_name)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.uname,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, #{item.age,jdbcType=INTEGER}, 
        #{item.userStatus,jdbcType=TINYINT}, #{item.loginName,jdbcType=VARCHAR}, #{item.deptId,jdbcType=INTEGER}, 
        #{item.positionId,jdbcType=INTEGER}, #{item.roleId,jdbcType=INTEGER}, #{item.phone,jdbcType=VARCHAR}, 
        #{item.email,jdbcType=VARCHAR}, #{item.ipAddress,jdbcType=VARCHAR}, #{item.creatime,jdbcType=VARCHAR}, 
        #{item.creatName,jdbcType=VARCHAR})
    </foreach>
  </insert>
</mapper>